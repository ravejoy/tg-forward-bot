name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Quality — Lint • Typecheck • Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint -- --max-warnings=0

      - name: Typecheck
        run: npm run typecheck

      - name: Tests
        run: npm run test -- --run

  build:
    name: Build
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Pull Vercel settings (preview)
        run: npx vercel pull --yes --environment=preview
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Vercel prebuild (preview)
        run: npx vercel build
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Upload prebuilt output (preview)
        uses: actions/upload-artifact@v4
        with:
          name: vercel-output-preview
          path: .vercel/output

      - name: Pull Vercel settings (production)
        run: npx vercel pull --yes --environment=production
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Vercel prebuild (prod)
        run: npx vercel build --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Upload prebuilt output (prod)
        uses: actions/upload-artifact@v4
        with:
          name: vercel-output-prod
          path: .vercel/output

  deploy_preview:
    name: Preview deploy (Vercel) for PR
    needs: build
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.head.repo.full_name == github.repository
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download prebuilt (preview)
        uses: actions/download-artifact@v4
        with:
          name: vercel-output-preview
          path: .vercel/output

      - name: Deploy prebuilt to Vercel (preview)
        id: vercel
        uses: vercel/action@v3
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          prebuilt: true
          prod: false

      - name: Comment preview URL to PR
        if: steps.vercel.outputs.preview-url != ''
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${{ steps.vercel.outputs['preview-url'] }}`;
            const body = `✅ **Vercel preview**: ${url}\n\nCheck \`${url}/api/health\``;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });

  deploy_prod:
    name: Deploy to Vercel (main)
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download prebuilt (prod)
        uses: actions/download-artifact@v4
        with:
          name: vercel-output-prod
          path: .vercel/output

      - name: Deploy prebuilt to Vercel (prod)
        uses: vercel/action@v3
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          prebuilt: true
          prod: true
